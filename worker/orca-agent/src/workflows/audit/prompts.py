"""Prompts for the audit workflow."""

PROMPTS = {
    "review_pr": (
        "A pull request has been checked out for you. The following files are available:\n"
        "{current_files}\n\n"
        "Requirements to check:\n"
        "Implementation matches problem description\n"
        "All unit tests pass\n"
        "IMPORTANT: Ignore tests that require an end to end test runner like playwright or cypress\n"
        "Implementation is in a single file in the /src directory\n"
        "tests are in a single file in the /tests directory\n"
        "No other files are modified\n\n"
        "IMPORTANT: ALWAYS use relative paths (e.g., 'src/file.py' not '/src/file.py')\n\n"
        "Test requirements to verify (where applicable):\n"
        "1. Core Functionality Testing:\n"
        "   - Tests the actual implementation, not just mocks\n"
        "   - For external services (APIs, databases, etc.), includes both:\n"
        "     * Integration tests with real services\n"
        "     * Unit tests with mocks for edge cases\n"
        "   - Tests the complete workflow, not just individual parts\n"
        "2. Edge Cases and Input Validation:\n"
        "   - Tests boundary values and limits\n"
        "   - Tests invalid/malformed inputs\n"
        "   - Tests empty/null cases\n"
        "   - Tests type mismatches\n"
        "3. Error Handling:\n"
        "   - Tests error conditions (e.g., network failures, timeouts)\n"
        "   - Tests error recovery and cleanup\n"
        "4. Test Design:\n"
        "   - Tests are independent and deterministic\n"
        "   - No shared state between tests\n"
        "   - Mocks are used appropriately\n"
        "   - Tests all code paths and branches\n"
        "5. Performance and Resources:\n"
        "   - Tests with realistic data sizes\n"
        "   - Verifies performance requirements\n"
        "   - Tests resource cleanup\n\n"
        "Review criteria:\n"
        "- APPROVE if all requirements are met and tests pass\n"
        "- REVISE if there are minor issues:\n"
        "test coverage could be improved but core functionality is tested\n"
        "implementation and tests exist but are not in the /src and /tests directories\n"
        "other files are modified\n\n"
        "- REJECT if there are major issues:\n"
        "incorrect implementation, failing tests, missing critical features\n"
        "no error handling, security vulnerabilities, no tests\n"
        "tests are poorly designed or rely too heavily on mocking\n\n"
    ),
}
